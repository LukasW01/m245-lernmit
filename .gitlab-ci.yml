stages:
  - test
  - bundle
  - docker

variables:
  REGISTRY: ghcr.io

cache:
  paths:
    - vendor/ruby

sast:
  stage: test
include:
  - template: Security/SAST.gitlab-ci.yml

rubocop:
  stage: bundle
  before_script:
    - ruby -v
    - bundle config set --local deployment true
    - bundle install -j $(nproc)
  script:
    - bundler exec rubocop
  image: ruby:3.3.0

test:
  stage: bundle
  before_script:
    - ruby -v
    - bundle config set --local deployment true
    - bundle install -j $(nproc)
  script:
    - bin/rails test
  artifacts:
    when: always
    paths:
      - coverage/
    reports:
      junit: coverage/rspec.xml
  image: ruby:3.3.0

rspec:
  stage: bundle
  before_script:
    - ruby -v
    - bundle config set --local deployment true
    - bundle install -j $(nproc)
  script:
    - bundle exec rspec spec -r rspec_junit_formatter --format RspecJunitFormatter -o coverage/rspec.xml
  artifacts:
    when: always
    paths:
      - coverage/
    reports:
      junit: coverage/rspec.xml
  image: ruby:3.3.0

docker_build:
  stage: docker
  services:
    - docker:dind
  before_script:
    - docker login $REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASSWORD
  script:
    - docker build --pull -t "lernmit" .
    # latest tag
    - docker tag "lernmit" "$REGISTRY/$PROJECT_NAMESPACE/lernmit:latest"
    - docker push "$REGISTRY/$PROJECT_NAMESPACE/lernmit:latest"
    # version tag
    - docker tag "lernmit" "$REGISTRY/$PROJECT_NAMESPACE/lernmit:$CI_COMMIT_TAG"
    - docker push "$REGISTRY/$PROJECT_NAMESPACE/lernmit:$CI_COMMIT_TAG"
  image: docker:cli
  only:
    - tags